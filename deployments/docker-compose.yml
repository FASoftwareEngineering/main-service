version: "3.9"

services:
  app:
    container_name: app
    build:
      context: ../src/
      dockerfile: ../src/Dockerfile
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ../src/app:/src/app
    networks:
      - mynetwork
    depends_on:
      - app_postgres
      - caddy

  app_postgres:
    container_name: app-postgres
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DOCKER_POSTGRES_DB}
      POSTGRES_USER: ${DOCKER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DOCKER_POSTGRES_PASSWORD}
      PGDATA: /data/postgres

    ports:
      - "5433:5432"
    volumes:
      - ./volumes/postgres/postgres:/data/postgres
    networks:
      - mynetwork

  app_tests_postgres:
    container_name: app-tests-postgres
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: "app_tests_postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: /data/app_tests_postgres

    ports:
      - "5434:5432"
    volumes:
      - ./volumes/postgres/app_tests_postgres:/data/app_tests_postgres
    networks:
      - mynetwork

  caddy:
    container_name: caddy-reverse-proxy
    image: caddy:2.6
    restart: unless-stopped
    environment:
      APP_MATCHER: "app:8008"

    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
      - "5000:5000"
    volumes:
      - ../configs/Caddyfile:/etc/caddy/Caddyfile
      - ./volumes/caddy/data:/data
      - ./volumes/caddy/config:/config
    networks:
      - mynetwork

  pgadmin:
    container_name: utils-pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DOCKER_PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DOCKER_PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"

    ports:
      - "5050:80"
    volumes:
      - ./volumes/postgres/pgadmin:/root/.pgadmin
    networks:
      - mynetwork

networks:
  mynetwork:
